@model IEnumerable<TesteNovaVida.Models.Professor>

@{
    ViewData["Title"] = "Professores";
}

<h2>Professores</h2>
<hr />
<br />

<span class="ml-1">Total de Professores: <b>@Model.Count().ToString()</b></span>
<hr />
<div style="max-height: 400px; overflow-x: auto">
    <table class="table">
        <thead>
            <tr>
                <th>
                    Nome do professor
                </th>
                <th>
                    Ações
                </th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NomeProfessor)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.IdProfessor" class="text-decoration-none">
                        <input class="btn btn-sm btn-outline-success mr-2" value="Alterar" style="width: 80px"/>
                    </a>
                    <a href='#' class="btnExcluir text-decoration-none" name="@item.IdProfessor">
                        <input class="btn btn-sm btn-outline-danger" value="Excluir" style="width: 80px" />
                    </a>
                        <a asp-action="ListarAlunosProfessor" asp-route-id="@item.IdProfessor" asp-route-nome="@item.NomeProfessor" class="text-decoration-none">
                        <input class="btn btn-sm btn-outline-secondary" value="Listar seus alunos" style="width: 150px" />
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
<br />

<hr />
<div class="d-inline-block">
    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Create", "Professors")'">Incluir professor</button>
    <button type="button" class="btn btn-outline-secondary" onclick="location.href='@Url.Action("Index", "Alunoes")'">Listar todos os alunos</button>
</div>


<script src="~/js/jquery.js"></script>
<script type="text/javascript">

    $(".table").on("click", ".btnExcluir", deleteRow);

    function deleteRow() {

        Swal.fire({
            title: "Confirmação",
            text: "Deseja excluir este professor e todos os alunos que já foram associados a ele?",
            icon: "warning",
            showCancelButton: true,
            buttonsStyling: false,
            confirmButtonText: "Sim, Excluir!",
            cancelButtonText: "Não, cancelar!",
            customClass: {
                confirmButton: 'btn btn-danger',
                cancelButton: 'btn btn-outline-secondary'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                var id  = $(this).attr("name");
                Delete(id);

                var par = $(this).parent().parent();
                par.remove();
            }
            else {
                return false;
            }
        });
    };


    function Delete(id) {

        $.post({
            url: '/Professors/DeleteDirect/' + id,
            success: function (result, status, xhr) {
               msgAlunoExcluido();
            },
        });

    }

    function msgAlunoExcluido() {
        const Toast = Swal.mixin({
            toast: true,
            position: "center-center",
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            }
        });
        Toast.fire({
            title: "O professor e todos os seus respectivos alunos foram <b style='color:red'>excluídos</b>!",
            icon: "danger"
        }).then(function () {
            return true;

        });
    }

</script>